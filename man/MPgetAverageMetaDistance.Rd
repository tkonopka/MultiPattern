% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MP_compute.R
\name{MPgetAverageMetaDistance}
\alias{MPgetAverageMetaDistance}
\title{Compute a meta distance object from an MP object. Uses subsampling and averaging,
which provides a cross-validation of sorts and reduces computation load for large
datasets.}
\usage{
MPgetAverageMetaDistance(MP, standardize = MPrankNeighbors,
  subsample.N = NULL, subsample.R = NULL, alpha = NULL,
  beta = NULL, verbose = TRUE, ...)
}
\arguments{
\item{MP}{MultiPattern configuration object}

\item{standardize}{function used to transform similarity matrices}

\item{subsample.N}{integer, number of samples in each subsampling; when NULL,
value is extracted from MP$settings}

\item{subsample.R}{integer, number of repetitions; when NULL, value
is extracted from MP$settings}

\item{alpha}{numeric, used as an alternative way to transform similarity matrices,
applied after transform.fun; when null, value is extracted from MP$settings}

\item{beta}{numeric, sets the Lbeta norm; when NULL, value is extracted from
MP$settings}

\item{verbose}{logical, set TRUE to print progress messages}

\item{...}{additional arguments, used when applying standardize function to the MPS}
}
\description{
Settings for subsampling and averaging are determined by
MP$settings$subsample.N and MP$settings$subsample.R
}
